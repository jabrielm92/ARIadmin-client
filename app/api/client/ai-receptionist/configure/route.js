import { NextResponse } from 'next/server';\nimport { updateClient } from '@/lib/db/clients';\n\nexport async function POST(request) {\n  try {\n    const { clientId, config } = await request.json();\n    \n    if (!clientId || !config) {\n      return NextResponse.json(\n        { success: false, error: 'Client ID and config are required' },\n        { status: 400 }\n      );\n    }\n\n    // Update client with AI receptionist configuration\n    const updateData = {\n      'services.aiReceptionist.config': config,\n      'services.aiReceptionist.setupComplete': true,\n      'services.aiReceptionist.configuredAt': new Date()\n    };\n\n    const success = await updateClient(clientId, updateData);\n    \n    if (success) {\n      return NextResponse.json({\n        success: true,\n        message: 'AI Receptionist configured successfully'\n      });\n    } else {\n      return NextResponse.json(\n        { success: false, error: 'Failed to update configuration' },\n        { status: 500 }\n      );\n    }\n  } catch (error) {\n    console.error('Error configuring AI receptionist:', error);\n    return NextResponse.json(\n      { success: false, error: error.message },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET(request) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const clientId = searchParams.get('clientId');\n    \n    if (!clientId) {\n      return NextResponse.json(\n        { success: false, error: 'Client ID is required' },\n        { status: 400 }\n      );\n    }\n\n    // TODO: Fetch configuration from database\n    // For now, return empty config\n    return NextResponse.json({\n      success: true,\n      config: null\n    });\n  } catch (error) {\n    console.error('Error fetching configuration:', error);\n    return NextResponse.json(\n      { success: false, error: error.message },\n      { status: 500 }\n    );\n  }\n}\n